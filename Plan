План автоматизации тестирования сценария записи на обучение профессии "Тестировщик ПО"


1) Перечень автоматизируемых сценариев:

Путь к форме №1:
Зайти на главную страницу сайта https://netology.ru/
На главной странице нажать кнопку "Каталог курсов"
Навести курсор на вкладку "Программирование"
Кликнуть в выпадающем списке по "Тестировщик ПО"
Нажать кнопку "Записаться"

Путь к форме №2:
Зайти на главную страницу сайта https://netology.ru/
В блоке "Направление обучения" кликнуть по вкладке "Программирование"
В выпадающем списке кликнуть "Тестировщик ПО"
Нажать кнопку "Записаться"

Путь к форме №3:
Зайти на главную страницу сайта https://netology.ru/
На главной странице нажать кнопку "Каталог курсов"
Нажать кнопку "Полный каталог"
В списке кликнуть по гиперссылке "Тестировщик ПО"
Нажать кнопку "Записаться"

Путь к форме №4:
Зайти на главную страницу сайта https://netology.ru/
Проскроллить страницу до блока "Выберите вектор развития"
Нажать на гиперссылку "Выбрать курс"
В выпадающем списке кликнуть "Тестировщик ПО"
Нажать кнопку "Записаться"

Путь к форме №5:
Зайти на главную страницу сайта https://netology.ru/
Опуститься в подвал страницы
Справа от блока "Обучение" кликнуть на указатель " ▼ "
В выпадающем списке выбрать "Программирование"
В списке кликнуть "Тестировщик ПО"
Нажать кнопку "Записаться"

Путь к форме №6:
Зайти на главную страницу сайта https://netology.ru/
На главной странице нажать кнопку "Каталог курсов"
В строке поиска ввести с клавиатуры Тестировщик
В выпадающем списке выбрать Тестировщик ПО


Тестирование формы:

Позитивный тест:	
Заполнение формы валидными данными -> Нажать кнопку "Записаться".	
данные успешно отправлены; 

Негативные тесты:	
Отправка пустой формы -> Нажать кнопку "Записаться"	
отправки данных не произойдет; 
Отправка формы с одним пустым полем "ИМЯ": поле имя остается пустым, поле "ТЕЛЕФОН" вводим валидные данные -> Нажать кнопку "Записаться"	
отправки данных не произойдет; 
Отправка формы с одним пустым полем "ТЕЛЕФОН": поле телефон остается пустым, поле "ИМЯ" вводим валидные данные -> Нажать кнопку "Записаться"	
отправки данных не произойдет; 

Валидации полей:	
Поле "ИМЯ" формы вводим не валидные данные, поле "ТЕЛЕФОН" вводим валидные данные -> Нажать кнопку "Записаться"	
отправки данных не произойдет; 

Поле "ИМЯ" формы вводим одним буквенным символом, поле "ТЕЛЕФОН" вводим валидные данные -> Нажать кнопку "Записаться"	
тправки данных не произойдет; 

Поле "ТЕЛЕФОН" формы вводим не валидные данные, поле "ИМЯ" вводим валидные данные -> Нажать кнопку "Записаться"	
отправки данных не произойдет; 

2) Перечень используемых инструментов:

IntelliJ IDEA -> Удобная среда разработки ПО, поддерживает самые распространенные языки программирования и ОС

Java JDK 11 -> Имеет набор готового ПО для разработки и запуска приложений.

Selenide -> Фреймворк для создания автотестов, удобен при тестировании UI

Gradle -> Система управления зависимостями, оптимален при создании проектов с авто-тестами

JavaFaker -> библиотека для генерации случайных тестовых данных.

Lombok -> Плагин для минимизации строк кода за счет аннотаций позволяет оптимизировать код автотестов, добавляет в Java новые «ключевые слова» и 
превращает аннотации в Java-код, уменьшая усилия на разработку и обеспечивая некоторую дополнительную функциональность

TestNG -> имеет, по сравнению с JUnit, больше аннотаций для управления состоянием SUT (например @BeforeSuite, @AfterSuite), может разбивать тесты на наборы тестов (suite) и 
имеет больше возможностей по параметризации тестов)

Rest Assured ->java-библиотека для тестирования REST API, позволяет автоматизировать тестирование get и post запросов.

Allure -> фреймворк для создания отчетов о тестировании, для наглядного отображения прохождения тестов и ошибок.

Git и GitHub - для хранения кода. -> Git достаточно прост и удобен для управления исходным кодом, очень распространенная система контроля версий, поэтому достаточно хорошо взаимодействует с различными ОС. GitHub специализированный веб-сервис с удобным интерфейсои, интегрирован с Git.

Docker Desktop -> это платформа контейнеризации с открытым исходным кодом. для развертывания контейнера с базой данных MySQL.


3) Перечень необходимых разрешений, данных и доступов

Разрешение на проведение тестирования администрации веб-сайта Нетологии

Доступ на чтения БД для сверки результатов


4) Перечень и описание возможных рисков при автоматизации

Удорожание проекта и отнять достаточно много времени при постоянном контроле и актуализация тестов.
Нестабильная работа сайта во время тестов
При работе с БД есть риск повреждений, появления дополнительных тестовых данных в БД, утечка данных. 
Потеря актуальности тестов при изменение архитектуры сайта.


5) Перечень необходимых специалистов для автоматизации

Данный проект не сложный, поэтому будет достаточно junior инженера по автоматизации, владеющий перечисленными выше инструментами.
И опытного наставки для проверки выполненой работы. 

6) Интервальная оценка с учётом рисков в часах

После согласования всех необходимых доступов, у специалиста: 
подготовка тестового окружения, написание тестов, прогон тестов, написание отчета о проделанной работы займет 10 - 16 часов.






